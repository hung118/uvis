--------------------------------------------------------
--  File created - Wed 05d/18/2011  Run this file in SQL plus with command  SQL>@C:\eclipse-3.7\workspace\vts\src\main\sql\init_vts.sql 
--------------------------------------------------------
  DROP SEQUENCE PERSON_SEQ;
  DROP SEQUENCE VTS_SEQ;
  DROP SEQUENCE VTS_ATTACHMENT_SEQ;
  DROP TRIGGER TBI_SUR;
  DROP TRIGGER TBI_VN;
  DROP TRIGGER TBI_V_D;
  DROP TRIGGER TBI_VETERAN_BENEFIT;
  DROP TABLE SECURITY_USER cascade constraints;
  DROP TABLE ROLE cascade constraints;
  DROP TABLE SECURITY_USER_ROLE cascade constraints;
  DROP TABLE ETHNICITY cascade constraints;
  DROP TABLE RECORD_TYPE cascade constraints;
  DROP TABLE RELATION cascade constraints;
  DROP TABLE COMBAT_ZONE cascade constraints;
  DROP TABLE VETERAN_INFO cascade constraints;
  DROP TABLE REGISTRATION;
  DROP TABLE VETERAN_ATTACHMENT cascade constraints;
  DROP TABLE DOC_TYPE cascade constraints;
  DROP TABLE NOTE cascade constraints;
  DROP TABLE VETERAN_NOTE cascade constraints;
  DROP TABLE SERVICE_ERA cascade constraints;
  DROP TABLE SERVICE_BRANCH cascade constraints;
  DROP TABLE DISCHARGE_TYPE cascade constraints;
  DROP TABLE BENEFIT_TYPE cascade constraints;
  DROP TABLE VETERAN_SERVICE_PERIOD cascade constraints;
  DROP TABLE DECORATION_MEDAL cascade constraints;
  DROP TABLE VETERAN_DECORATION cascade constraints;
  DROP TABLE VETERAN_BENEFIT cascade constraints;
  DROP TABLE BENEFIT_RECIPIENT cascade constraints;
  DROP TABLE REPORT cascade constraints;
  DROP TABLE REPORT_PROPERTY cascade constraints;
  DROP TABLE DATA_IMPORT cascade constraints;
  DROP TABLE RURAL_CROSSWALK;
  DROP TABLE ATTACHMENT_POINTER_INFO;
  DROP VIEW SECURITY_USER_ROLE_V;

--------------------------------------------------------
--  Create tables and constraints
--------------------------------------------------------

CREATE TABLE SECURITY_USER (
	ID	NUMBER(22,0) NOT NULL,
	LAST_NAME	VARCHAR2(64) NULL,
  	FIRST_NAME	VARCHAR2(64) NULL,
  	MIDDLE_NAME	VARCHAR2(64) NULL,
  	EMAIL	VARCHAR2(64) NOT NULL,
  	CREATED_BY	NUMBER(22,0) NOT NULL,
  	UPDATED_BY	NUMBER(22,0) NOT NULL,
  	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
  	PRIMARY KEY(ID)
); 

ALTER TABLE SECURITY_USER
	ADD (
		CONSTRAINT SU_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

--

CREATE TABLE ROLE (
	ID	NUMBER(22,0) NOT NULL,
	ROLE_NAME	VARCHAR2(32) NOT NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE ROLE
	ADD (
		CONSTRAINT ROLE_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);
	
--
  
CREATE TABLE SECURITY_USER_ROLE (
	ID	NUMBER(22,0) NOT NULL,
	SECURITY_USER_ID	NUMBER(22,0) NOT NULL,
	ROLE_ID NUMBER(22,0) NOT NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE SECURITY_USER_ROLE
	ADD (
		CONSTRAINT SUR_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE SECURITY_USER_ROLE
    ADD ( CONSTRAINT SU_R_FK1
	FOREIGN KEY(SECURITY_USER_ID)
	REFERENCES SECURITY_USER(ID) );
	
ALTER TABLE SECURITY_USER_ROLE
    ADD ( CONSTRAINT SU_R_FK2
	FOREIGN KEY(ROLE_ID)
	REFERENCES ROLE(ID) );

--

CREATE TABLE ETHNICITY (
	ID	NUMBER(22,0) NOT NULL,
	NAME	VARCHAR2(64) NOT NULL,
	DESCRIPTION VARCHAR2(64) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE "ETHNICITY" ADD CONSTRAINT "ETH_NAME_UNIQUE" UNIQUE (NAME);

ALTER TABLE ETHNICITY
	ADD (
		CONSTRAINT ETH_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

--

CREATE TABLE RECORD_TYPE (
	ID	NUMBER(22,0) NOT NULL,
	NAME	VARCHAR2(64) NOT NULL,
	DESCRIPTION VARCHAR2(64) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE "RECORD_TYPE" ADD CONSTRAINT "RT_NAME_UNIQUE" UNIQUE (NAME);

ALTER TABLE RECORD_TYPE
	ADD (
		CONSTRAINT RT_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);
	
--

CREATE TABLE RELATION (
	ID	NUMBER(22,0) NOT NULL,
	NAME	VARCHAR2(64) NOT NULL,
	DESCRIPTION VARCHAR2(64) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE "RELATION" ADD CONSTRAINT "REL_NAME_UNIQUE" UNIQUE (NAME);

ALTER TABLE RELATION
	ADD (
		CONSTRAINT REL_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);
	
--

CREATE TABLE COMBAT_ZONE (
	ID	NUMBER(22,0) NOT NULL,
	NAME	VARCHAR2(64) NOT NULL,
	DESCRIPTION VARCHAR2(64) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE "COMBAT_ZONE" ADD CONSTRAINT "CZ_NAME_UNIQUE" UNIQUE (NAME);

ALTER TABLE COMBAT_ZONE
	ADD (
		CONSTRAINT CZ_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);
	
--

CREATE TABLE VETERAN_INFO (
	ID	NUMBER(22,0) NOT NULL,
	SSN	VARCHAR2(11) NOT NULL,
	LAST_NAME	VARCHAR2(64) NULL,
  	FIRST_NAME	VARCHAR2(64) NULL,
  	MIDDLE_NAME	VARCHAR2(64) NULL,
  	SUFFIX	VARCHAR2(6) NULL,
	ADDRESS1	VARCHAR2(255) NULL,
	ADDRESS2	VARCHAR2(255) NULL,
	CITY	VARCHAR2(255) NULL,
	STATE	VARCHAR2(2) NULL,
	ZIP		VARCHAR2(10) NULL,
	MAILING_ADDR1	VARCHAR2(255) NULL,
	MAILING_ADDR2	VARCHAR2(255) NULL,
	MAILING_CITY	VARCHAR2(255) NULL,
	MAILING_STATE	VARCHAR2(2) NULL,
	MAILING_ZIP	VARCHAR2(10) NULL,
	PRIMARY_PHONE	VARCHAR2(12) NULL,
	ALT_PHONE	VARCHAR2(12) NULL,
	ALT_CONTACT_FIRST_NAME	VARCHAR2(64) NULL,
	ALT_CONTACT_LAST_NAME	VARCHAR2(64) NULL,
	ALT_CONTACT_ADDR1	VARCHAR2(255) NULL,
	ALT_CONTACT_ADDR2	VARCHAR2(255) NULL,
	ALT_CONTACT_CITY	VARCHAR2(255) NULL,
	ALT_CONTACT_STATE	VARCHAR2(2) NULL,
	ALT_CONTACT_ZIP	VARCHAR2(10) NULL,
	ALT_CONTACT_PHONE	VARCHAR2(12) NULL,
	ALT_CONTACT_RELATION_ID	NUMBER(22,0) NULL,
	DATE_OF_BIRTH	DATE NULL,
	DATE_OF_DEATH	DATE NULL,
	PERCENT_DISABILITY	NUMBER(3,0) NULL,
	GENDER	VARCHAR2(6) NULL,
	ETHNICITY_ID	NUMBER(22,0) NULL,
  	EMAIL	VARCHAR2(64) NULL,
  	EMAIL_OPTION NUMBER(1,0) DEFAULT 2 NULL,
  	CONTACTABLE	NUMBER(1,0) DEFAULT 1 NOT NULL,
  	SHARE_FEDERAL_VA	NUMBER(1,0) DEFAULT 1 NOT NULL,
  	VERIFIED	NUMBER(1,0) DEFAULT 0 NOT NULL,
  	SOURCE	NUMBER(22,0) NOT NULL,
  	SOURCE_DATE	DATE DEFAULT SYSDATE NOT NULL,
  	VA_CURRENT	NUMBER(1,0) DEFAULT 0 NOT NULL,
	VA_ENROLLED	NUMBER(1,0) DEFAULT 0 NULL,
	VA_MED_ENROLLED	NUMBER(1,0) DEFAULT 0 NULL,
  	REVIEWED	NUMBER(1,0) DEFAULT 0 NOT NULL,
  	RURAL	CHAR(1) NULL,
  	CREATED_BY	NUMBER(22,0) NOT NULL,
  	UPDATED_BY	NUMBER(22,0) NOT NULL,
  	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
  	PRIMARY KEY(ID)
); 
	
ALTER TABLE VETERAN_INFO
	ADD (
		CONSTRAINT VA_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);
	
ALTER TABLE VETERAN_INFO
    ADD ( CONSTRAINT VA_FK1
	FOREIGN KEY(ETHNICITY_ID)
	REFERENCES ETHNICITY(ID) );	
		
ALTER TABLE VETERAN_INFO
    ADD ( CONSTRAINT VA_FK2
	FOREIGN KEY(SOURCE)
	REFERENCES RECORD_TYPE(ID) );	
	
ALTER TABLE VETERAN_INFO
    ADD ( CONSTRAINT VA_FK3
	FOREIGN KEY(CREATED_BY)
	REFERENCES SECURITY_USER(ID) );
	
ALTER TABLE VETERAN_INFO
    ADD ( CONSTRAINT VA_FK4
	FOREIGN KEY(UPDATED_BY)
	REFERENCES SECURITY_USER(ID) );
	
ALTER TABLE VETERAN_INFO
    ADD ( CONSTRAINT VA_FK5
	FOREIGN KEY(ALT_CONTACT_RELATION_ID)
	REFERENCES RELATION(ID) );	
	
--

CREATE TABLE REGISTRATION (
	ID	NUMBER(22,0) NOT NULL,
	SSN	VARCHAR2(11) NOT NULL,
	LAST_NAME	VARCHAR2(64) NULL,
  	FIRST_NAME	VARCHAR2(64) NULL,
  	MIDDLE_NAME	VARCHAR2(64) NULL,
	ADDRESS1	VARCHAR2(255) NULL,
	ADDRESS2	VARCHAR2(255) NULL,
	CITY	VARCHAR2(255) NULL,
	STATE	VARCHAR2(2) NULL,
	ZIP		VARCHAR2(10) NULL,
	PRIMARY_PHONE	VARCHAR2(12) NULL,
	DATE_OF_BIRTH DATE NULL,
	GENDER	VARCHAR2(6) NULL,
	ETHNICITY_ID	NUMBER(22,0) NULL,
	EMAIL	VARCHAR2(64) NULL,
	SHARE_FEDERAL_VA	NUMBER(1,0) DEFAULT 1 NOT NULL,
	VA_ENROLLED	NUMBER(1,0) DEFAULT 0 NULL,
	PERCENT_DISABILITY	NUMBER(3,0) NULL,
	SERVICE_BRANCH_ID NUMBER(22,0) NULL,
	SERVICE_START_DATE DATE NULL,
	SERVICE_END_DATE DATE NULL,
	DISCHARGE_TYPE_ID NUMBER(22,0) NULL,
	PURPLE_HEART	NUMBER(1,0) DEFAULT 0 NULL,
	CREATED_DATE DATE NULL,
	TRANSFER_DATE DATE NULL,
	PRIMARY KEY(ID)
);

--

CREATE TABLE DOC_TYPE (
	ID	NUMBER(22,0) NOT NULL,
	NAME	VARCHAR2(64) NOT NULL,
	DESCRIPTION	VARCHAR2(64) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE DOC_TYPE
	ADD (
		CONSTRAINT DOC_TYPE_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);
	
ALTER TABLE "DOC_TYPE" ADD CONSTRAINT "DOC_TYPE_NAME_UNIQUE" UNIQUE (NAME);
	
--

CREATE TABLE VETERAN_ATTACHMENT (
	ID NUMBER(22,0) NOT NULL,
	VETERAN_ID NUMBER(22,0) NOT NULL,
	ATTACHMENT BLOB,
	ATTACHMENT_FILE_NAME VARCHAR2(64),
	ATTACHMENT_CONTENT_TYPE VARCHAR2(64),
	DOC_TYPE_ID NUMBER(22,0),
	CREATED_BY	NUMBER(22,0) NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE VETERAN_ATTACHMENT
    ADD ( 
    	CONSTRAINT VATT_FK1
		FOREIGN KEY(VETERAN_ID)
		REFERENCES VETERAN_INFO(ID) 
	);
	
ALTER TABLE VETERAN_ATTACHMENT
    ADD ( 
    	CONSTRAINT VATT_FK2
		FOREIGN KEY(DOC_TYPE_ID)
		REFERENCES DOC_TYPE(ID) 
	);
	
ALTER TABLE VETERAN_ATTACHMENT
    ADD ( CONSTRAINT VATT_FK3
	FOREIGN KEY(CREATED_BY)
	REFERENCES SECURITY_USER(ID) );
	
--
	
CREATE TABLE NOTE (
	ID	NUMBER(22,0) NOT NULL,
	NOTE_TEXT	VARCHAR2(4000) NOT NULL,
	CREATED_BY	NUMBER(22,0) NOT NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE NOTE
	ADD (
		CONSTRAINT NOTE_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE NOTE
    ADD ( CONSTRAINT NOTE_FK
	FOREIGN KEY(CREATED_BY)
	REFERENCES SECURITY_USER(ID) );
	
--

CREATE TABLE VETERAN_NOTE (
	ID	NUMBER(22,0) NOT NULL,
	VETERAN_ID	NUMBER(22,0) NOT NULL,
	NOTE_ID NUMBER(22,0) NOT NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE VETERAN_NOTE
	ADD (
		CONSTRAINT VN_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE VETERAN_NOTE
    ADD ( CONSTRAINT VN_FK1
	FOREIGN KEY(VETERAN_ID)
	REFERENCES VETERAN_INFO(ID) );
	
ALTER TABLE VETERAN_NOTE
    ADD ( CONSTRAINT VN_FK2
	FOREIGN KEY(NOTE_ID)
	REFERENCES NOTE(ID) );
	
--
CREATE TABLE SERVICE_ERA (
	ID	NUMBER(22,0) NOT NULL,
	NAME	VARCHAR2(64) NOT NULL,
	START_DATE	DATE NOT NULL,
	END_DATE	DATE NOT NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);
	
ALTER TABLE SERVICE_ERA
	ADD (
		CONSTRAINT SE_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE "SERVICE_ERA" ADD CONSTRAINT "SE_NAME_UNIQUE" UNIQUE (NAME);

--

CREATE TABLE SERVICE_BRANCH (
	ID	NUMBER(22,0) NOT NULL,
	NAME	VARCHAR2(64) NOT NULL,
	DESCRIPTION	VARCHAR2(64) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);
	
ALTER TABLE SERVICE_BRANCH
	ADD (
		CONSTRAINT SB_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE "SERVICE_BRANCH" ADD CONSTRAINT "SB_NAME_UNIQUE" UNIQUE (NAME);

--

CREATE TABLE DISCHARGE_TYPE (
	ID	NUMBER(22,0) NOT NULL,
	NAME	VARCHAR2(64) NOT NULL,
	DESCRIPTION	VARCHAR2(64) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);
	
ALTER TABLE DISCHARGE_TYPE
	ADD (
		CONSTRAINT DT_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE "DISCHARGE_TYPE" ADD CONSTRAINT "DT_NAME_UNIQUE" UNIQUE (NAME);

--

CREATE TABLE BENEFIT_TYPE (
	ID	NUMBER(22,0) NOT NULL,
	NAME	VARCHAR2(64) NOT NULL,
	DESCRIPTION	VARCHAR2(64) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);
	
ALTER TABLE BENEFIT_TYPE
	ADD (
		CONSTRAINT BT_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE "BENEFIT_TYPE" ADD CONSTRAINT "BT_NAME_UNIQUE" UNIQUE (NAME);

--

CREATE TABLE VETERAN_SERVICE_PERIOD (
	ID	NUMBER(22,0) NOT NULL,
	VETERAN_ID	NUMBER(22,0) NOT NULL,
	START_DATE	DATE NULL,
	END_DATE	DATE NULL,
	SERVICE_BRANCH_ID	NUMBER(22,0) NOT NULL,
	COMBAT_ZONE_ID	NUMBER(22,0) NULL,
	SERVICE_ERA_ID	NUMBER(22,0) NULL,
	DISCHARGE_TYPE_ID	NUMBER(22,0) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);
	
ALTER TABLE VETERAN_SERVICE_PERIOD
	ADD (
		CONSTRAINT VSP_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE VETERAN_SERVICE_PERIOD
    ADD ( CONSTRAINT VSP_FK1
	FOREIGN KEY(VETERAN_ID)
	REFERENCES VETERAN_INFO(ID) );	

ALTER TABLE VETERAN_SERVICE_PERIOD
    ADD ( CONSTRAINT VSP_FK2
	FOREIGN KEY(SERVICE_BRANCH_ID)
	REFERENCES SERVICE_BRANCH(ID) );	
	
ALTER TABLE VETERAN_SERVICE_PERIOD
    ADD ( CONSTRAINT VSP_FK3
	FOREIGN KEY(SERVICE_ERA_ID)
	REFERENCES SERVICE_ERA(ID) );		

ALTER TABLE VETERAN_SERVICE_PERIOD
    ADD ( CONSTRAINT VSP_FK4
	FOREIGN KEY(DISCHARGE_TYPE_ID)
	REFERENCES DISCHARGE_TYPE(ID) );
	
ALTER TABLE VETERAN_SERVICE_PERIOD
    ADD ( CONSTRAINT VSP_FK5
	FOREIGN KEY(COMBAT_ZONE_ID)
	REFERENCES COMBAT_ZONE(ID) );	
	
--

CREATE TABLE DECORATION_MEDAL (
	ID	NUMBER(22,0) NOT NULL,
	NAME	VARCHAR2(64) NOT NULL,
	DESCRIPTION	VARCHAR2(64) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);
	
ALTER TABLE DECORATION_MEDAL
	ADD (
		CONSTRAINT DM_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE "DECORATION_MEDAL" ADD CONSTRAINT "DM_NAME_UNIQUE" UNIQUE (NAME);
	
--

CREATE TABLE VETERAN_DECORATION (
	ID	NUMBER(22,0) NOT NULL,
	VETERAN_ID	NUMBER(22,0) NOT NULL,
	DECORATION_MEDAL_ID NUMBER(22,0) NOT NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE VETERAN_DECORATION
	ADD (
		CONSTRAINT V_D_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE VETERAN_DECORATION
    ADD ( CONSTRAINT V_D_FK1
	FOREIGN KEY(VETERAN_ID)
	REFERENCES VETERAN_INFO(ID) );
	
ALTER TABLE VETERAN_DECORATION
    ADD ( CONSTRAINT V_D_FK2
	FOREIGN KEY(DECORATION_MEDAL_ID)
	REFERENCES DECORATION_MEDAL(ID) );
	
--

CREATE TABLE VETERAN_BENEFIT (
	ID	NUMBER(22,0) NOT NULL,
	VETERAN_ID	NUMBER(22,0) NOT NULL,
	BENEFIT_TYPE_ID	NUMBER(22,0) NOT NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);
	
ALTER TABLE VETERAN_BENEFIT
	ADD (
		CONSTRAINT VB_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE VETERAN_BENEFIT
    ADD ( CONSTRAINT VB_FK1
	FOREIGN KEY(VETERAN_ID)
	REFERENCES VETERAN_INFO(ID) );	

ALTER TABLE VETERAN_BENEFIT
    ADD ( CONSTRAINT VB_FK2
	FOREIGN KEY(BENEFIT_TYPE_ID)
	REFERENCES BENEFIT_TYPE(ID) );	

--

CREATE TABLE BENEFIT_RECIPIENT (
	ID	NUMBER(22,0) NOT NULL,
	VETERAN_BENEFIT_ID	NUMBER(22,0) NOT NULL,
	LAST_NAME	VARCHAR2(64) NULL,
  	FIRST_NAME	VARCHAR2(64) NULL,
  	MIDDLE_NAME	VARCHAR2(64) NULL,
	ADDRESS1	VARCHAR2(255) NULL,
	ADDRESS2	VARCHAR2(255) NULL,
	CITY	VARCHAR2(255) NULL,
	STATE	VARCHAR2(2) NULL,
	ZIP		VARCHAR2(10) NULL,
	MAILING_ADDR1	VARCHAR2(255) NULL,
	MAILING_ADDR2	VARCHAR2(255) NULL,
	MAILING_CITY	VARCHAR2(255) NULL,
	MAILING_STATE	VARCHAR2(2) NULL,
	MAILING_ZIP	VARCHAR2(10) NULL,
	PRIMARY_PHONE	VARCHAR2(12) NULL,
	ALT_PHONE	VARCHAR2(12) NULL,
	RELATION_ID	NUMBER(22,0) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);
	
ALTER TABLE BENEFIT_RECIPIENT
	ADD (
		CONSTRAINT BR_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE BENEFIT_RECIPIENT
    ADD ( CONSTRAINT BR_FK1
	FOREIGN KEY(VETERAN_BENEFIT_ID)
	REFERENCES VETERAN_BENEFIT(ID) );	
	
ALTER TABLE BENEFIT_RECIPIENT
    ADD ( CONSTRAINT BR_FK2
	FOREIGN KEY(RELATION_ID)
	REFERENCES RELATION(ID) );	
	
--

CREATE TABLE REPORT_PROPERTY (
	ID	NUMBER(22,0) NOT NULL,
	SOURCE	VARCHAR2(64) NULL,
	VA_ENROLLED NUMBER(1,0) NULL,
	VA_MED_ENROLLED NUMBER(1,0) NULL,
	DECEASED NUMBER(1,0) NULL,
	VERIFIED VARCHAR2(10) NULL,
	REVIEWED VARCHAR2(10) NULL,
	VA_CURRENT VARCHAR2(10) NULL,
	RURAL CHAR(1) NULL,
	LAST_NAME VARCHAR2(64) NULL,
	FIRST_NAME VARCHAR2(64) NULL,
	GENDER VARCHAR2(6) NULL,
	ADDRESS1	VARCHAR2(255) NULL,
	CITY VARCHAR2(64) NULL,
	STATE VARCHAR2(2) NULL,
	ZIP VARCHAR2(10) NULL,
	PRIMARY_PHONE VARCHAR2(12) NULL,
	ALT_PHONE VARCHAR2(12) NULL,
	SSN VARCHAR2(11) NULL,
	EMAIL VARCHAR2(64) NULL,
	DOB DATE NULL,
	SERVICE_ERA_ID NUMBER(22,0) NULL,
	SERVICE_BRANCH_ID NUMBER(22,0) NULL,
	DISCHARGE_TYPE_ID NUMBER(22,0) NULL,
	COMBAT_ZONE_ID NUMBER(22,0) NULL,
	SERVICE_PERIOD_FROM DATE NULL,
	SERVICE_PERIOD_TO DATE NULL,
	BENEFIT_TYPE_ID NUMBER(22,0) NULL,
	NOTE VARCHAR2(64) NULL,
	DECORATION_MEDALS VARCHAR2(64) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);
	
ALTER TABLE REPORT_PROPERTY
	ADD (
		CONSTRAINT RP_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);	

--
	
CREATE TABLE REPORT (
	ID	NUMBER(22,0) NOT NULL,
	USER_ID	NUMBER(22,0) NOT NULL,
	REPORT_NAME	VARCHAR2(255) NOT NULL,
	REPORT_PROPERTY_ID NUMBER(22,0) NOT NULL,
	SHARABLE NUMBER(1,0) NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);

ALTER TABLE REPORT
	ADD (
		CONSTRAINT REPORT_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);

ALTER TABLE REPORT
    ADD ( CONSTRAINT REPORT_FK1
	FOREIGN KEY(USER_ID)
	REFERENCES SECURITY_USER(ID) );	

ALTER TABLE REPORT
    ADD ( CONSTRAINT REPORT_FK2
	FOREIGN KEY(REPORT_PROPERTY_ID)
	REFERENCES REPORT_PROPERTY(ID) );	
---

CREATE TABLE DATA_IMPORT (
	ID	NUMBER(22,0) NOT NULL,
	FILE_NAME VARCHAR2(64) NOT NULL,
	RECORD_COUNT NUMBER(10,0) NOT NULL,
	BAD_REC NUMBER(10,0) NOT NULL,
	SOURCE	NUMBER(22,0) NOT NULL,
	STATUS	VARCHAR2(100) NOT NULL,
	CREATED_BY	NUMBER(22,0) NOT NULL,
	ACTIVE	NUMBER(1,0) DEFAULT 1 NOT NULL,
	INSERT_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	UPDATE_TIMESTAMP	DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(ID)
);
	
ALTER TABLE DATA_IMPORT
	ADD (
		CONSTRAINT DI_ACTIVE_CK
		CHECK (ACTIVE IN (0,1)) 
	);
	
ALTER TABLE DATA_IMPORT
    ADD ( CONSTRAINT DI_FK1
	FOREIGN KEY(CREATED_BY)
	REFERENCES SECURITY_USER(ID) );
	
ALTER TABLE DATA_IMPORT
    ADD ( CONSTRAINT DI_FK2
	FOREIGN KEY(SOURCE)
	REFERENCES RECORD_TYPE(ID) );	
	
---

CREATE TABLE RURAL_CROSSWALK (
	ZIP_CODE	VARCHAR2(5) NOT NULL,
	DESIGNATION	CHAR(1) NOT NULL,
	PRIMARY KEY(ZIP_CODE)
);

-- implement external storage for attachments
ALTER TABLE VETERAN_ATTACHMENT ADD ATTACHMENT_POINTER VARCHAR2(100);
CREATE TABLE ATTACHMENT_POINTER_INFO (
	ID	NUMBER(22, 0) NOT NULL,
	DIRECTORY_COUNT	NUMBER(8, 0) NOT NULL,
	FILE_COUNT	NUMBER(4, 0) NOT NULL,
	FILE_NUMBER NUMBER(10, 0) NOT NULL,
	PRIMARY KEY(ID)
);
	
--------------------------------------------------------
--  Create views
--------------------------------------------------------

CREATE VIEW SECURITY_USER_ROLE_V AS
SELECT UR.SECURITY_USER_ID SECURITY_USER_ID, UR.ROLE_ID ROLE_ID, U.EMAIL EMAIL, R.ROLE_NAME ROLE_NAME
FROM 
	SECURITY_USER_ROLE UR LEFT JOIN SECURITY_USER U ON UR.SECURITY_USER_ID = U.ID
	LEFT JOIN ROLE R ON UR.ROLE_ID = R.ID
ORDER BY U.EMAIL;

--------------------------------------------------------
--  Create sequences
--------------------------------------------------------
CREATE SEQUENCE  "PERSON_SEQ"  MINVALUE 100 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 100 CACHE 20 NOORDER  NOCYCLE ;

CREATE SEQUENCE  "VTS_SEQ"  MINVALUE 100 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 100 CACHE 20 NOORDER  NOCYCLE ;

CREATE SEQUENCE  "VTS_ATTACHMENT_SEQ"  MINVALUE 100 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 100 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  Initial data inserts
--------------------------------------------------------
INSERT INTO VA_VTS.ROLE(ID, ROLE_NAME) 
    VALUES(1, 'Read Only');
INSERT INTO VA_VTS.ROLE(ID, ROLE_NAME) 
    VALUES(2, 'Data Entry');
INSERT INTO VA_VTS.ROLE(ID, ROLE_NAME) 
    VALUES(3, 'Admin');
INSERT INTO VA_VTS.ROLE(ID, ROLE_NAME) 
    VALUES(4, 'Super User');

INSERT INTO VA_VTS.SECURITY_USER(ID, LAST_NAME, FIRST_NAME, MIDDLE_NAME, EMAIL, CREATED_BY, UPDATED_BY) 
    VALUES(person_seq.nextval, 'Admin', 'Sys', '', 'hnguyen@utah.gov', 100, 100);

ALTER TABLE SECURITY_USER
    ADD ( CONSTRAINT SU_SU_FK1
	FOREIGN KEY(CREATED_BY)
	REFERENCES SECURITY_USER(ID) );

ALTER TABLE SECURITY_USER
    ADD ( CONSTRAINT SU_SU_FK2
	FOREIGN KEY(UPDATED_BY)
	REFERENCES SECURITY_USER(ID) );
    
INSERT INTO VA_VTS.SECURITY_USER(ID, LAST_NAME, FIRST_NAME, MIDDLE_NAME, EMAIL, CREATED_BY, UPDATED_BY) 
    VALUES(person_seq.nextval, 'Thorstensen', 'Ryan', '', 'ryant@utah.gov', 100, 100);
INSERT INTO VA_VTS.SECURITY_USER(ID, LAST_NAME, FIRST_NAME, MIDDLE_NAME, EMAIL, CREATED_BY, UPDATED_BY) 
    VALUES(person_seq.nextval, 'Satterlee', 'Gerry', '', 'gsatterlee@utah.gov', 100, 100);
INSERT INTO VA_VTS.SECURITY_USER_ROLE(ID, SECURITY_USER_ID, ROLE_ID) 
    VALUES(VTS_SEQ.NEXTVAL, 100, 4);

INSERT INTO VA_VTS.ETHNICITY(ID, NAME, DESCRIPTION, ACTIVE, INSERT_TIMESTAMP, UPDATE_TIMESTAMP) 
    VALUES(21, 'African American', 'African American', 1, SYSDATE, SYSDATE);
INSERT INTO VA_VTS.ETHNICITY(ID, NAME, DESCRIPTION, ACTIVE, INSERT_TIMESTAMP, UPDATE_TIMESTAMP) 
    VALUES(22, 'Asian American', 'Asian American', 1, SYSDATE, SYSDATE);
INSERT INTO VA_VTS.ETHNICITY(ID, NAME, DESCRIPTION, ACTIVE, INSERT_TIMESTAMP, UPDATE_TIMESTAMP) 
    VALUES(23, 'Caucasian', 'Caucasian', 1, SYSDATE, SYSDATE);
INSERT INTO VA_VTS.ETHNICITY(ID, NAME, DESCRIPTION, ACTIVE, INSERT_TIMESTAMP, UPDATE_TIMESTAMP) 
    VALUES(24, 'Latino', 'Latino', 1, SYSDATE, SYSDATE);
INSERT INTO VA_VTS.ETHNICITY(ID, NAME, DESCRIPTION, ACTIVE, INSERT_TIMESTAMP, UPDATE_TIMESTAMP) 
    VALUES(25, 'Native American', 'Native American', 1, SYSDATE, SYSDATE);
INSERT INTO VA_VTS.ETHNICITY(ID, NAME, DESCRIPTION, ACTIVE, INSERT_TIMESTAMP, UPDATE_TIMESTAMP) 
    VALUES(26, 'Pacific Islander', 'Pacific Islander', 1, SYSDATE, SYSDATE);
INSERT INTO VA_VTS.ETHNICITY(ID, NAME, DESCRIPTION, ACTIVE, INSERT_TIMESTAMP, UPDATE_TIMESTAMP) 
    VALUES(27, 'Other', 'Other', 1, SYSDATE, SYSDATE);
INSERT INTO VA_VTS.RECORD_TYPE(ID, NAME, DESCRIPTION)
	VALUES(1, 'Client Track', 'Client Track');
INSERT INTO VA_VTS.RECORD_TYPE(ID, NAME, DESCRIPTION)
	VALUES(2, 'DD214', 'DD214');
INSERT INTO VA_VTS.RECORD_TYPE(ID, NAME, DESCRIPTION)
	VALUES(3, 'DL', 'Driver License');
INSERT INTO VA_VTS.RECORD_TYPE(ID, NAME, DESCRIPTION)
	VALUES(4, 'DTek', 'Doc Tek');
INSERT INTO VA_VTS.RECORD_TYPE(ID, NAME, DESCRIPTION)
	VALUES(5, 'DWS', 'Work Force Services');
INSERT INTO VA_VTS.RECORD_TYPE(ID, NAME, DESCRIPTION)
	VALUES(6, 'Manual', 'Manual data entry');
INSERT INTO VA_VTS.RECORD_TYPE(ID, NAME, DESCRIPTION)
	VALUES(7, 'Online', 'Online registration');




    
--------------------------------------------------------
--  Create triggers
--------------------------------------------------------
CREATE TRIGGER TBI_SUR
before insert on SECURITY_USER_ROLE
for each row
begin
	if :new.ID is null then
		select VTS_SEQ.nextval
		into :new.ID
		from dual;
	end if;
end;
/

CREATE TRIGGER TBI_VN
before insert on VETERAN_NOTE
for each row
begin
	if :new.ID is null then
		select VTS_SEQ.nextval
		into :new.ID
		from dual;
	end if;
end;
/

CREATE TRIGGER TBI_V_D
before insert on VETERAN_DECORATION
for each row
begin
	if :new.ID is null then
		select VTS_SEQ.nextval
		into :new.ID
		from dual;
	end if;
end;
/

CREATE TRIGGER TBI_VETERAN_BENEFIT
before insert on VETERAN_BENEFIT
for each row
begin
	if :new.ID is null then
		select VTS_SEQ.nextval
		into :new.ID
		from dual;
	end if;
end;
/

